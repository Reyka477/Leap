using System;
using System.Collections.Generic;
using UnityEngine.UI;
using TMPro;
using UnityEngine;

public class PlayerInfo : MonoBehaviour
{
   public Image healthBar;
   public TextMeshProUGUI healthText;
   public TextMeshProUGUI coinText;
   public TextMeshProUGUI orbText;
   public GameObject heartPrefab;
   public Transform container;
   private List<GameObject> hearts = new List<GameObject>();
   
   public int maxHealth = 100;
   public int currentHealth;
   public int life;
   public int orb;
   public int key;
   public int coin;
   private void Start()
   {
    currentHealth = maxHealth;
    coin = 0;
    life = 0;
    orb = 0;
    key = 0;
   }
   public void AddHeart()
   {
      GameObject newHeart = Instantiate(heartPrefab, container);

      // –í—Å—Ç–∞–≤–ª—è–µ–º —Å–µ—Ä–¥—Ü–µ —Å–ª–µ–≤–∞
      newHeart.transform.SetSiblingIndex(0);
      hearts.Insert(0, newHeart);

      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è 
      Animator anim = newHeart.GetComponent<Animator>();
      if (anim != null)
         anim.SetTrigger("Appear");

      life++;
   }
   public void RemoveHeart()
   {
      if (life <= 0 || hearts.Count == 0)
      {
         Die();
         return;
      }

      // –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–µ—Ä–¥—Ü–µ
      GameObject heartToRemove = hearts[hearts.Count - 1];

      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
      Animator anim = heartToRemove.GetComponent<Animator>();
      
      if (anim != null)
         anim.SetTrigger("Disappear");

      // –£–¥–∞–ª—è–µ–º —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
      Destroy(heartToRemove, 0.3f);

      hearts.RemoveAt(hearts.Count - 1);
      life--;

      if (life <= 0)
         Die();
   }

   public void UpdateCurrencyText(string type)
   {
      if (type == "coin")
      {
         coin++;
         coinText.text = coin.ToString();
      }
      else if (type == "orb")
      {
         orb++;
         orbText.text = orb.ToString();
      }
   }

   public void Die()
   {
      Debug.Log("–ò–≥—Ä–æ–∫ —É–º–µ—Ä üòµ");
   }

}
